name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18.x'

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Backend Preview
        id: deploy-backend
        run: |
          cd backend
          DEPLOYMENT_URL=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "backend_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_BACKEND_PROJECT_ID }}

      - name: Deploy Frontend Preview
        id: deploy-frontend
        run: |
          cd frontend
          DEPLOYMENT_URL=$(vercel --token=${{ secrets.VERCEL_TOKEN }} --yes --env NEXT_PUBLIC_API_URL=${{ steps.deploy-backend.outputs.backend_url }})
          echo "frontend_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FRONTEND_PROJECT_ID }}

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `ðŸš€ Preview deployment ready!
            
            **Frontend**: ${{ steps.deploy-frontend.outputs.frontend_url }}
            **Backend API**: ${{ steps.deploy-backend.outputs.backend_url }}
            
            This preview will be automatically deleted when the PR is closed.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });